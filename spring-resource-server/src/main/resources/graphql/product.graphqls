enum SearchOperation {
    GT, LT, EQ, LIKE, IN
}

enum SortDirection {
    ASC, DSC
}

type Money {
    amount: Float!
    currency: String!
}

type ProductScore {
    averageScore: Float
    reviewsCount: Int
}

type Page {
    pageNumber: Int!
    isLastPage: Boolean!
    isFirstPage: Boolean!
}

type ProductPage {
    pageNumber: Int!
    isLastPage: Boolean!
    isFirstPage: Boolean!
    content: [Product]!
}

input SearchFilter {
    fieldName: String!
    searchOperation: SearchOperation!
    fieldValue: String!
}

input Sort {
    fieldName: String!
    sortDirection: SortDirection!
}

input Pageable {
    offset: Int!
    limit: Int!
}

type Product {
    id: ID!
    ownerId: Int!
    name: String!
    price: Money!
    quantity: Int!
    category: String!
    tags: [String]!
    productScore: ProductScore!
    description: String
    imageUrl: String
}

type Query {
#    searchProducts(filters: [SearchFilter]!): [Product]!
    searchProducts(filters: [SearchFilter]!, pageable: Pageable!, sort: Sort!): ProductPage!
}
