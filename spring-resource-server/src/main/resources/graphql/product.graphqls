enum SearchOperation {
    GT, LT, EQ, LIKE, IN
}

enum SortDirection {
    ASC, DSC
}

type Money {
    amount: Float!
    currency: String!
}

type ProductScore {
    averageScore: Float
    reviewsCount: Int
}

type ProductPage {
    isLastPage: Boolean!
    isFirstPage: Boolean!
    content: [Product]!
}

input SearchFilterInput {
    fieldName: String!
    searchOperation: SearchOperation!
    fieldValue: String!
}

input SortInput {
    fieldName: String!
    sortDirection: SortDirection!
}

input PageableInput {
    offset: Int!
    limit: Int!
}

type Product {
    id: ID!
    ownerId: Int!
    name: String!
    price: Money!
    quantity: Int!
    category: String!
    tags: [String]!
    productScore: ProductScore!
    description: String
    imageUrl: String
}

type Query {
    searchProducts(filters: [SearchFilterInput]!, pageable: PageableInput!, sort: SortInput!): ProductPage!
    findProductsByIds(ids: [Int!]!): [Product]
}

input MoneyInput {
    amount: Float!
    currency: String!
}

input ProductInput {
    name: String!
    description: String
    price: MoneyInput!
    quantity: Int!
    category: String!
    tags: [String]
    imageUrl: String
}

type Mutation {
    addProduct(product: ProductInput!): Boolean
}
